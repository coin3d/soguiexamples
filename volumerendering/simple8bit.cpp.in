#include <Inventor/@Gui@/So@Gui@.h>
#include <Inventor/@Gui@/viewers/So@Gui@ExaminerViewer.h>
#include <Inventor/nodes/SoSeparator.h>
#include <VolumeViz/nodes/SoTransferFunction.h>
#include <VolumeViz/nodes/SoVolumeData.h>
#include <VolumeViz/nodes/SoVolumeRender.h>
#include <VolumeViz/nodes/SoVolumeRendering.h>

#include "utility.h"

int
main(int argc, char ** argv)
{
  @WIDGET@ window = So@Gui@::init(argv[0]);
  SoVolumeRendering::init();

  SoSeparator * root = new SoSeparator;
  root->ref();

  SbVec3s dim = SbVec3s(64, 64, 64);
  uint8_t * voxeldata = generate8bitVoxelSet(dim);

  // Add SoVolumeData to scene graph
  SoVolumeData * volumedata = new SoVolumeData();
  volumedata->setVolumeData(dim, voxeldata, SoVolumeData::UNSIGNED_BYTE);
  root->addChild(volumedata);

  // Add TransferFunction (color map) to scene graph
  SoTransferFunction * transfunc = new SoTransferFunction();
  root->addChild(transfunc);

  // Add VolumeRender to scene graph
  SoVolumeRender * volrend = new SoVolumeRender();
  root->addChild(volrend);

  So@Gui@ExaminerViewer * viewer = new So@Gui@ExaminerViewer(window);
  viewer->setBackgroundColor(SbColor(0.1f, 0.3f, 0.5f));
  viewer->setSceneGraph(root);

  viewer->show();
  So@Gui@::show(window);
  So@Gui@::mainLoop();
  delete viewer;

  root->unref();
  delete[] voxeldata;

  return 0;
}
