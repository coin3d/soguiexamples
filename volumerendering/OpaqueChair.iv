#Inventor V2.1 ascii

DEF OpaqueChair Separator {
   
   ##
   ## Axis draggers
   ##

   Separator {      

      Separator {
         DEF AxisXDraggerTrans Translation { translation 0 0 0 }
         Rotation { rotation 1 0 0 1.571 }
         DEF AxisXDraggerScale Scale { }
         DEF AxisXDragger SmRangeTranslate1Dragger { range 0 1 }
      }
      Separator {
         DEF AxisYDraggerTrans Translation { translation 0 0 0 }
         Rotation { rotation 0 0 1 1.571 }
         DEF AxisYDraggerScale Scale { }
         DEF AxisYDragger SmRangeTranslate1Dragger { range 0 1 }
      }
      Separator {
         DEF AxisZDraggerTrans Translation { translation 0 0 0 }
         Rotation { rotation 0 1 0 1.571 }
         Rotation { rotation 1 0 0 1.571 }
         Rotation { rotation 0 0 1 3.1415 }
         DEF AxisZDraggerScale Scale { }
         DEF AxisZDragger SmRangeTranslate1Dragger { range 0 1 }
      }

      # Dragger labels
      BaseColor { rgb 1 1 0 } 
      Separator { 
         USE AxisXDraggerTrans
         DEF AxisXLabelTrans Translation { translation 0 0 0 }
         DEF AxisXLabel Text2 { string "x" }
      }
      Separator { 
         USE AxisYDraggerTrans
         DEF AxisYLabelTrans Translation { translation 0 0 0 }
         DEF AxisYLabel Text2 { string "y" }
      }
      Separator { 
         USE AxisZDraggerTrans
         DEF AxisZLabelTrans Translation { translation 0 0 0 }
         DEF AxisZLabel Text2 { string "z" }
      }

   }

   ##
   ## Axis kits
   ##

   Separator {
      
      Separator {
         DEF AxisXTrans Translation { translation 0 0 0 }
         DEF AxisXScale Scale {}
         DEF AxisX SmAxisKit { }
      }
      Separator {
         DEF AxisYTrans Translation { translation 0 0 0 }
         Rotation { rotation 0 1 0 1.571 }
         Rotation { rotation 0 0 1 1.571 }
         DEF AxisYScale Scale {}
         DEF AxisY SmAxisKit { }
      }
      Separator {
         DEF AxisZTrans Translation { translation 0 0 0 }
         Rotation { rotation 0 1 0 -1.571 }
         DEF AxisZScale Scale {}
         DEF AxisZ SmAxisKit { }
      }
      
   }
   
   ##
   ## Data visualization
   ##

   Separator {      

      DEF OrigoTranslation Translation { translation 0 0 0 }
      
      DEF Volumedata SoVolumeData {
      }
      
      DEF SolidVolumeTransferFunction SoTransferFunction {
         predefColorMap NONE
         colorMapType RGBA
         colorMap [
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.000, 0.000, 0.000, 1,  
          0.000, 0.000, 0.000, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.002, 0.002, 0.002, 1,  0.002, 0.002, 0.002, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.076, 0.076, 0.076, 1,  
          0.076, 0.076, 0.076, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.381, 0.381, 0.381, 1,  0.381, 0.381, 0.381, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.839, 0.839, 0.839, 1,  
          0.839, 0.839, 0.839, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.916, 0.916, 0.916, 1,  0.916, 0.916, 0.916, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.961, 0.961, 0.961, 1,  
          0.961, 0.961, 0.961, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.977, 0.977, 0.977, 1,  0.977, 0.977, 0.977, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
          0.992, 0.992, 0.992, 1,  0.992, 0.992, 0.992, 1,  
         ]
      }

      # *** Front 'L' shape ***
      DEF FrontL Separator {    
         DEF fL1 Separator {
            TransformSeparator {
               DEF LeftClipPlaneTrans Translation { translation 0 0 0 }
               Rotation { rotation 0 0 1 3.1415 }
               ClipPlane { }
            } 
            DEF FrontLSlice SoOrthoSlice { axis Z sliceNumber 0 } 
         }         

         DEF fL2 Separator {
            TransformSeparator {
               USE LeftClipPlaneTrans
               ClipPlane { }
            }
            TransformSeparator {
               DEF BottomClipPlaneTrans Translation { translation 0 0 0 }
               Rotation { rotation 0 0 1 -1.571 }
               ClipPlane { }
            } 
            USE FrontLSlice
         }

      }
      

      # *** Right 'L' shape ***
      DEF RightL Separator {    
         DEF rL1 Separator {
            TransformSeparator {
               DEF BackClipPlaneTrans Translation { translation 0 0 0 }
               Rotation { rotation 0 1 0 1.571 }
               ClipPlane { }            
            } 
            DEF RightLSlice SoOrthoSlice { axis X sliceNumber 0 } 
         }         

         DEF rL2 Separator {
            TransformSeparator {
               USE BackClipPlaneTrans
               Rotation { rotation 0 1 0 -1.571 }
               ClipPlane { }
            }
            TransformSeparator {
               USE BottomClipPlaneTrans
               Rotation { rotation 0 0 1 -1.571 }
               ClipPlane { }
            } 
            USE RightLSlice
         }
      }
      
      
      # *** Top 'L' shape ***
      DEF TopL Separator {    
         DEF tL1 Separator {
            TransformSeparator {
               USE BackClipPlaneTrans
               Rotation { rotation 0 1 0 1.571 }
               ClipPlane { }            
            } 
            DEF TopLSlice SoOrthoSlice { axis Y sliceNumber 0 } 
         }         

         DEF tL2 Separator {
            TransformSeparator {
               USE LeftClipPlaneTrans
               Rotation { rotation 0 0 1 3.1415 }
               ClipPlane { }
            } 
            TransformSeparator {
               USE BackClipPlaneTrans
               Rotation { rotation 0 1 0 -1.571 }
               ClipPlane { }
            }
            USE TopLSlice
         }
      }
      
      # *** Backsides of cube ***
      Separator { SoOrthoSlice { axis Y } }         
      Separator { SoOrthoSlice { axis X } }         
      Separator { SoOrthoSlice { axis Z } }      

      # *** Inner sides of 'chair' ***      
      Separator {

         DEF SolidVolumeInsideTransferFunction
         SoTransferFunction {
            predefColorMap NONE
            colorMapType RGBA
            colorMap [
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.000, 0.000, 1.000, 1,  0.000, 0.000, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.165, 0.165, 1.000, 1,  0.165, 0.165, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.333, 0.333, 1.000, 1,  0.333, 0.333, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.498, 0.498, 1.000, 1,  0.498, 0.498, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.667, 0.667, 1.000, 1,  0.667, 0.667, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             0.835, 0.835, 1.000, 1,  0.835, 0.835, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 1.000, 1.000, 1,  1.000, 1.000, 1.000, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.835, 0.835, 1,  1.000, 0.835, 0.835, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.667, 0.667, 1,  1.000, 0.667, 0.667, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.498, 0.498, 1,  1.000, 0.498, 0.498, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.333, 0.333, 1,  1.000, 0.333, 0.333, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.165, 0.165, 1,  1.000, 0.165, 0.165, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
             1.000, 0.000, 0.000, 1,  1.000, 0.000, 0.000, 1,  
            ]
         }

         Separator { DEF BottomInsideSlice SoOrthoSlice { axis Y sliceNumber 0 } }
         Separator { DEF LeftInsideSlice SoOrthoSlice { axis X sliceNumber 0 } }
         Separator { DEF BackInsideSlice SoOrthoSlice { axis Z sliceNumber 0 } }
      }
      
   }


   ##
   ## Transparent volume render part
   ##

   Separator {

      # decleared above
      USE OrigoTranslation
      USE Volumedata 

      DEF TransparentVolumeTransferFunction SoTransferFunction {
         predefColorMap SEISMIC
         colorMapType ALPHA
      }

      TransformSeparator {
         USE LeftClipPlaneTrans
         ClipPlane { }
      }
      TransformSeparator {
         USE BottomClipPlaneTrans
         Rotation { rotation 0 0 1 1.571 }
         ClipPlane { }
      }
      TransformSeparator {
         USE BackClipPlaneTrans
         Rotation { rotation 0 1 0 -1.571 }
         ClipPlane { }
      }

      SoVolumeRender {}

   }


}
