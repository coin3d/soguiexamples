# Makefile.in generated automatically by automake 1.5 from Makefile.am.

# Copyright 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001
# Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.

@SET_MAKE@

SHELL = @SHELL@

srcdir = @srcdir@
top_srcdir = @top_srcdir@
VPATH = @srcdir@
prefix = @prefix@
exec_prefix = @exec_prefix@

bindir = @bindir@
sbindir = @sbindir@
libexecdir = @libexecdir@
datadir = @datadir@
sysconfdir = @sysconfdir@
sharedstatedir = @sharedstatedir@
localstatedir = @localstatedir@
libdir = @libdir@
infodir = @infodir@
mandir = @mandir@
includedir = @includedir@
oldincludedir = /usr/include
pkgdatadir = $(datadir)/@PACKAGE@
pkglibdir = $(libdir)/@PACKAGE@
pkgincludedir = $(includedir)/@PACKAGE@
top_builddir = ../..

ACLOCAL = @ACLOCAL@
AUTOCONF = @AUTOCONF@
AUTOMAKE = @AUTOMAKE@
AUTOHEADER = @AUTOHEADER@

INSTALL = @INSTALL@
INSTALL_PROGRAM = @INSTALL_PROGRAM@
INSTALL_DATA = @INSTALL_DATA@
INSTALL_SCRIPT = @INSTALL_SCRIPT@
INSTALL_HEADER = $(INSTALL_DATA)
transform = @program_transform_name@
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_alias = @build_alias@
build_triplet = @build@
host_alias = @host_alias@
host_triplet = @host@
target_alias = @target_alias@
target_triplet = @target@
AMTAR = @AMTAR@
AWK = @AWK@
BUILD_WITH_MSVC = @BUILD_WITH_MSVC@
COMPONENTHEADER = @COMPONENTHEADER@
CPP = @CPP@
CXX = @CXX@
DEPDIR = @DEPDIR@
DSUFFIX = @DSUFFIX@
EVENT = @EVENT@
EXEEXT = @EXEEXT@
GUI = @GUI@
Gui = @Gui@
INSTALL_STRIP_PROGRAM = @INSTALL_STRIP_PROGRAM@
MAINT = @MAINT@
OBJEXT = @OBJEXT@
PACKAGE = @PACKAGE@
VERSION = @VERSION@
WIDGET = @WIDGET@
X_CFLAGS = @X_CFLAGS@
X_EXTRA_LIBS = @X_EXTRA_LIBS@
X_LIBS = @X_LIBS@
X_PRE_LIBS = @X_PRE_LIBS@
am__include = @am__include@
am__quote = @am__quote@
gui = @gui@
install_sh = @install_sh@
soguiconfig = @soguiconfig@

INCLUDES = -I$(top_srcdir)

noinst_PROGRAMS = \
	lorenz \
	nurbscurve \
	cubes


lorenz_SOURCES = lorenz.cpp star.h
nurbscurve_SOURCES = nurbscurve.cpp
cubes_SOURCES = cubes.cpp \
	Board.cpp Board.h GameLogic.cpp GameLogic.h Minimax.cpp Minimax.h \
	$(top_srcdir)/coin-competitions/TextureWriter.cpp


BUILT_SOURCES = \
	lorenz.cpp \
	nurbscurve.cpp \
	cubes.cpp

subdir = coin-competitions/SIM-20011005
mkinstalldirs = $(SHELL) $(top_srcdir)/cfg/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
noinst_PROGRAMS = lorenz$(EXEEXT) nurbscurve$(EXEEXT) cubes$(EXEEXT)
PROGRAMS = $(noinst_PROGRAMS)

am_cubes_OBJECTS = cubes.$(OBJEXT) Board.$(OBJEXT) GameLogic.$(OBJEXT) \
	Minimax.$(OBJEXT) TextureWriter.$(OBJEXT)
cubes_OBJECTS = $(am_cubes_OBJECTS)
cubes_LDADD = $(LDADD)
cubes_DEPENDENCIES =
cubes_LDFLAGS =
am_lorenz_OBJECTS = lorenz.$(OBJEXT)
lorenz_OBJECTS = $(am_lorenz_OBJECTS)
lorenz_LDADD = $(LDADD)
lorenz_DEPENDENCIES =
lorenz_LDFLAGS =
am_nurbscurve_OBJECTS = nurbscurve.$(OBJEXT)
nurbscurve_OBJECTS = $(am_nurbscurve_OBJECTS)
nurbscurve_LDADD = $(LDADD)
nurbscurve_DEPENDENCIES =
nurbscurve_LDFLAGS =

DEFS = @DEFS@
DEFAULT_INCLUDES =  -I. -I$(srcdir) -I$(top_builddir)
CPPFLAGS = @CPPFLAGS@
LDFLAGS = @LDFLAGS@
LIBS = @LIBS@
depcomp = $(SHELL) $(top_srcdir)/cfg/depcomp
@AMDEP_TRUE@DEP_FILES = $(DEPDIR)/Board.Po $(DEPDIR)/GameLogic.Po \
@AMDEP_TRUE@	$(DEPDIR)/Minimax.Po $(DEPDIR)/TextureWriter.Po \
@AMDEP_TRUE@	$(DEPDIR)/cubes.Po $(DEPDIR)/lorenz.Po \
@AMDEP_TRUE@	$(DEPDIR)/nurbscurve.Po
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
CXXFLAGS = @CXXFLAGS@
CFLAGS = @CFLAGS@
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
CCLD = $(CC)
LINK = $(CCLD) $(AM_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
DIST_SOURCES = $(cubes_SOURCES) $(lorenz_SOURCES) $(nurbscurve_SOURCES)
DIST_COMMON = Makefile.am Makefile.in
SOURCES = $(cubes_SOURCES) $(lorenz_SOURCES) $(nurbscurve_SOURCES)

all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .cpp .o .obj
$(srcdir)/Makefile.in: @MAINTAINER_MODE_TRUE@ Makefile.am  $(top_srcdir)/configure.in $(ACLOCAL_M4)
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  coin-competitions/SIM-20011005/Makefile
Makefile: @MAINTAINER_MODE_TRUE@ $(srcdir)/Makefile.in  $(top_builddir)/config.status
	cd $(top_builddir) && \
	  CONFIG_HEADERS= CONFIG_LINKS= \
	  CONFIG_FILES=$(subdir)/$@ $(SHELL) ./config.status

clean-noinstPROGRAMS:
	-test -z "$(noinst_PROGRAMS)" || rm -f $(noinst_PROGRAMS)
TextureWriter.$(OBJEXT): \
	$(top_srcdir)/coin-competitions/TextureWriter.cpp
cubes$(EXEEXT): $(cubes_OBJECTS) $(cubes_DEPENDENCIES) 
	@rm -f cubes$(EXEEXT)
	$(CXXLINK) $(cubes_LDFLAGS) $(cubes_OBJECTS) $(cubes_LDADD) $(LIBS)
lorenz$(EXEEXT): $(lorenz_OBJECTS) $(lorenz_DEPENDENCIES) 
	@rm -f lorenz$(EXEEXT)
	$(CXXLINK) $(lorenz_LDFLAGS) $(lorenz_OBJECTS) $(lorenz_LDADD) $(LIBS)
nurbscurve$(EXEEXT): $(nurbscurve_OBJECTS) $(nurbscurve_DEPENDENCIES) 
	@rm -f nurbscurve$(EXEEXT)
	$(CXXLINK) $(nurbscurve_LDFLAGS) $(nurbscurve_OBJECTS) $(nurbscurve_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT) core *.core

distclean-compile:
	-rm -f *.tab.c

@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/Board.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/GameLogic.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/Minimax.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/TextureWriter.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/cubes.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/lorenz.Po@am__quote@
@AMDEP_TRUE@@am__include@ @am__quote@$(DEPDIR)/nurbscurve.Po@am__quote@

distclean-depend:
	-rm -rf $(DEPDIR)

.cpp.o:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `test -f $< || echo '$(srcdir)/'`$<

.cpp.obj:
@AMDEP_TRUE@	source='$<' object='$@' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/$*.Po' tmpdepfile='$(DEPDIR)/$*.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXXCOMPILE) -c -o $@ `cygpath -w $<`

TextureWriter.o: $(top_srcdir)/coin-competitions/TextureWriter.cpp
@AMDEP_TRUE@	source='$(top_srcdir)/coin-competitions/TextureWriter.cpp' object='TextureWriter.o' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TextureWriter.Po' tmpdepfile='$(DEPDIR)/TextureWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextureWriter.o `test -f $(top_srcdir)/coin-competitions/TextureWriter.cpp || echo '$(srcdir)/'`$(top_srcdir)/coin-competitions/TextureWriter.cpp

TextureWriter.obj: $(top_srcdir)/coin-competitions/TextureWriter.cpp
@AMDEP_TRUE@	source='$(top_srcdir)/coin-competitions/TextureWriter.cpp' object='TextureWriter.obj' libtool=no @AMDEPBACKSLASH@
@AMDEP_TRUE@	depfile='$(DEPDIR)/TextureWriter.Po' tmpdepfile='$(DEPDIR)/TextureWriter.TPo' @AMDEPBACKSLASH@
@AMDEP_TRUE@	$(CXXDEPMODE) $(depcomp) @AMDEPBACKSLASH@
	$(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS) -c -o TextureWriter.obj `cygpath -w $(top_srcdir)/coin-competitions/TextureWriter.cpp`
CXXDEPMODE = @CXXDEPMODE@
uninstall-info-am:

tags: TAGS

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	mkid -fID $$unique $(LISP)

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '    { files[$$0] = 1; } \
	       END { for (i in files) print i; }'`; \
	test -z "$(ETAGS_ARGS)$$unique$(LISP)$$tags" \
	  || etags $(ETAGS_ARGS) $$tags  $$unique $(LISP)

GTAGS:
	here=`CDPATH=: && cd $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH

DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)

top_distdir = ../..
distdir = $(top_distdir)/$(PACKAGE)-$(VERSION)

distdir: $(DISTFILES)
	@for file in $(DISTFILES); do \
	  if test -f $$file; then d=.; else d=$(srcdir); fi; \
	  dir=`echo "$$file" | sed -e 's,/[^/]*$$,,'`; \
	  if test "$$dir" != "$$file" && test "$$dir" != "."; then \
	    $(mkinstalldirs) "$(distdir)/$$dir"; \
	  fi; \
	  if test -d $$d/$$file; then \
	    cp -pR $$d/$$file $(distdir) \
	    || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-am
all-am: Makefile $(PROGRAMS)

installdirs:

install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-rm -f Makefile $(CONFIG_CLEAN_FILES) stamp-h stamp-h[0-9]*

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-noinstPROGRAMS mostlyclean-am

distclean: distclean-am

distclean-am: clean-am distclean-compile distclean-depend \
	distclean-generic distclean-tags

dvi: dvi-am

dvi-am:

info: info-am

info-am:

install-data-am:

install-exec-am:

install-info: install-info-am

install-man:

installcheck-am:

maintainer-clean: maintainer-clean-am

maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic

uninstall-am: uninstall-info-am

.PHONY: GTAGS all all-am check check-am clean clean-generic \
	clean-noinstPROGRAMS distclean distclean-compile \
	distclean-depend distclean-generic distclean-tags distdir dvi \
	dvi-am info info-am install install-am install-data \
	install-data-am install-exec install-exec-am install-info \
	install-info-am install-man install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic tags uninstall uninstall-am \
	uninstall-info-am


############################################################################

lorenz.cpp: $(srcdir)/lorenz.cpp.in
	@( cd ../..; $(MAKE) built-sources )

nurbscurve.cpp: $(srcdir)/nurbscurve.cpp.in
	@( cd ../..; $(MAKE) built-sources )

cubes.cpp: $(srcdir)/cubes.cpp.in
	@( cd ../..; $(MAKE) built-sources )
# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
