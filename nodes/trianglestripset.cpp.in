/**************************************************************************\
 * Copyright (c) Kongsberg Oil & Gas Technologies AS
 * All rights reserved.
 *
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are
 * met:
 *
 * Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * Redistributions in binary form must reproduce the above copyright
 * notice, this list of conditions and the following disclaimer in the
 * documentation and/or other materials provided with the distribution.
 *
 * Neither the name of the copyright holder nor the names of its
 * contributors may be used to endorse or promote products derived from
 * this software without specific prior written permission.
 *
 * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS
 * "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT
 * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR
 * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT
 * HOLDER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,
 * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT
 * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,
 * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY
 * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT
 * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
\**************************************************************************/

#include <cstdlib> // exit()
#include <Inventor/@Gui@/So@Gui@.h>
#include <Inventor/@Gui@/viewers/So@Gui@ExaminerViewer.h>
#include <Inventor/nodes/SoSeparator.h>
#include <Inventor/nodes/SoCoordinate3.h>
#include <Inventor/nodes/SoTriangleStripSet.h>
#include <Inventor/nodes/SoNormal.h>
#include <Inventor/nodes/SoNormalBinding.h>

// Coordinates
static float vertices[8][3] = {
  {  1, -1,  1},
  {  0,  1,  0},
  { -1, -1,  1},
  { -1, -1, -1},
  {  1, -1,  1},
  {  1, -1, -1},
  {  0,  1,  0},
  { -1, -1, -1}
};

static float norms[6][3] = {
  {  0,  0.7071f,  0.7071f},
  { -0.7071f, 0.7071f,  0},
  {  0, -1, 0},
  {  0, -1, 0},
  { 0.7071f, 0.7071f, 0},
  {  0, 0.7071f, -0.7071f}
};

// Function that sets up an object using the SoTriangleStripSet node.
// Return:
//  SoSeparator *
SoSeparator *
triangleStrip()
{
  SoSeparator * ts = new SoSeparator;

 // Define the normals used
  SoNormal * normals = new SoNormal;
  normals->vector.setValues(0, 6, norms);
  ts->addChild(normals);
  SoNormalBinding *normalBinding = new SoNormalBinding;
  normalBinding->value = SoNormalBinding::PER_FACE;
  ts->addChild(normalBinding);

  // Define Coordinates
  SoCoordinate3 * coords = new SoCoordinate3;
  coords->point.setValues(0, 8, vertices);
  ts->addChild(coords);

  // Define TriangleStripSet
  SoTriangleStripSet * strip = new SoTriangleStripSet;
  strip->numVertices.setValue(8);
  ts->addChild(strip);

  return ts;
}

int
main(int, char ** argv)
{
  (void)printf("This example shows how to use the SoTriangleStripSet node.\n");

  // Initialize
  @WIDGET@ window = So@Gui@::init(argv[0]);
  if (window==NULL) exit(1);

  // Create scene graph
  SoSeparator * root = new SoSeparator;
  root->ref();  // increments the root's reference counter
  root->addChild(triangleStrip());

  // Set up the ExaminerViewer
  So@Gui@ExaminerViewer * viewer = new So@Gui@ExaminerViewer(window);
  viewer->setSceneGraph(root);
  viewer->setTitle("Triangle Strip Set");
  viewer->viewAll();
  viewer->show();

  So@Gui@::show(window); // display the main window
  So@Gui@::mainLoop();   // main Coin event loop
  delete viewer;      // free up all resources occupied by viewer
  root->unref();      // decrements the root's reference counter
  return 0;
}
